/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PasskeyStorage,
  PasskeyStorageInterface,
} from "../PasskeyStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "passkeyId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "PasskeyRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "passkeyId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "PasskeyUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "credentialId",
        type: "bytes",
      },
    ],
    name: "getPasskey",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "credentialId",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "counter",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fmt",
            type: "string",
          },
          {
            internalType: "bytes16",
            name: "aaguid",
            type: "bytes16",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "deviceType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "backedUp",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "lastUsed",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "transports",
            type: "string[]",
          },
        ],
        internalType: "struct PasskeyStorage.PasskeyView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "credentialId",
        type: "bytes",
      },
    ],
    name: "getPasskeyId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "listPasskeys",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "credentialId",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "counter",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fmt",
            type: "string",
          },
          {
            internalType: "bytes16",
            name: "aaguid",
            type: "bytes16",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "deviceType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "backedUp",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "lastUsed",
            type: "uint256",
          },
        ],
        internalType: "struct PasskeyStorage.PasskeyPayload",
        name: "payload",
        type: "tuple",
      },
      {
        internalType: "string[]",
        name: "transports",
        type: "string[]",
      },
    ],
    name: "registerPasskey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "credentialId",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "counter",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fmt",
            type: "string",
          },
          {
            internalType: "bytes16",
            name: "aaguid",
            type: "bytes16",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "deviceType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "backedUp",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "lastUsed",
            type: "uint256",
          },
        ],
        internalType: "struct PasskeyStorage.PasskeyPayload",
        name: "payload",
        type: "tuple",
      },
      {
        internalType: "string[]",
        name: "transports",
        type: "string[]",
      },
    ],
    name: "updatePasskey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611c0d8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80637568fe691461005c5780638eeb163914610078578063c4f6cf80146100a8578063ca4f97d5146100c6578063ced13190146100e2575b600080fd5b61007660048036038101906100719190610e85565b610112565b005b610092600480360381019061008d9190610f57565b6103a4565b60405161009f9190610fbd565b60405180910390f35b6100b06103fb565b6040516100bd9190611096565b60405180910390f35b6100e060048036038101906100db9190610e85565b610453565b005b6100fc60048036038101906100f79190610f57565b61072c565b6040516101099190611405565b60405180910390f35b600061016f8480600001906101279190611436565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c26565b90506000806000838152602001908152602001600020905080600a0160009054906101000a900460ff166101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf906114f6565b60405180910390fd5b8480600001906101e89190611436565b8260000191826101f992919061175c565b5084806020019061020a9190611436565b82600101918261021b92919061175c565b5084604001358160020181905550848060600190610239919061182c565b82600301918261024a9291906118f5565b5084608001602081019061025e91906119f1565b8160040160006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c02179055508460a001602081019061029c9190611a4a565b8160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848060c001906102ee919061182c565b8260060191826102ff9291906118f5565b508460e00160208101906103139190611aa3565b8160070160006101000a81548160ff0219169083151502179055508461010001358160080181905550610347818585610c37565b8460a001602081019061035a9190611a4a565b73ffffffffffffffffffffffffffffffffffffffff16827f20e2796619d7455764be1b47ca70e1199a33f3ffa35b1ba45bc83b8f38ff008e60405160405180910390a35050505050565b60006103f383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c26565b905092915050565b6060600180548060200260200160405190810160405280929190818152602001828054801561044957602002820191906000526020600020905b815481526020019060010190808311610435575b5050505050905090565b60006104b08480600001906104689190611436565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c26565b90506000806000838152602001908152602001600020905080600a0160009054906101000a900460ff161561051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190611b1c565b60405180910390fd5b84806000019061052a9190611436565b82600001918261053b92919061175c565b5084806020019061054c9190611436565b82600101918261055d92919061175c565b508460400135816002018190555084806060019061057b919061182c565b82600301918261058c9291906118f5565b508460800160208101906105a091906119f1565b8160040160006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c02179055508460a00160208101906105de9190611a4a565b8160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848060c00190610630919061182c565b8260060191826106419291906118f5565b508460e00160208101906106559190611aa3565b8160070160006101000a81548160ff0219169083151502179055508461010001358160080181905550600181600a0160006101000a81548160ff0219169083151502179055506106a6818585610c37565b60018290806001815401808255809150506001900390600052602060002001600090919091909150558460a00160208101906106e29190611a4a565b73ffffffffffffffffffffffffffffffffffffffff16827fdbbd9fcc7aa768115f595370dbc5fb6ea6f5e6bf382636120c295546a6816ba460405160405180910390a35050505050565b610734610cd1565b600061078384848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c26565b90506000806000838152602001908152602001600020905080600a0160009054906101000a900460ff166107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e390611b88565b60405180910390fd5b6000816009018054905067ffffffffffffffff81111561080f5761080e611521565b5b60405190808252806020026020018201604052801561084257816020015b606081526020019060019003908161082d5790505b50905060005b826009018054905081101561092b5782600901818154811061086d5761086c611ba8565b5b9060005260206000200180546108829061157f565b80601f01602080910402602001604051908101604052809291908181526020018280546108ae9061157f565b80156108fb5780601f106108d0576101008083540402835291602001916108fb565b820191906000526020600020905b8154815290600101906020018083116108de57829003601f168201915b505050505082828151811061091357610912611ba8565b5b60200260200101819052508080600101915050610848565b506040518061014001604052808360000180546109479061157f565b80601f01602080910402602001604051908101604052809291908181526020018280546109739061157f565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b505050505081526020018360010180546109d99061157f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a059061157f565b8015610a525780601f10610a2757610100808354040283529160200191610a52565b820191906000526020600020905b815481529060010190602001808311610a3557829003601f168201915b5050505050815260200183600201548152602001836003018054610a759061157f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa19061157f565b8015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b505050505081526020018360040160009054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020018360050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836006018054610b719061157f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9d9061157f565b8015610bea5780601f10610bbf57610100808354040283529160200191610bea565b820191906000526020600020905b815481529060010190602001808311610bcd57829003601f168201915b505050505081526020018360070160009054906101000a900460ff16151581526020018360080154815260200182815250935050505092915050565b600081805190602001209050919050565b6000828290509050836009016000610c4f9190610d4f565b60005b81811015610cca5784600901848483818110610c7157610c70611ba8565b5b9050602002810190610c83919061182c565b90918060018154018082558091505060019003906000526020600020016000909192909192909192909192509182610cbc9291906118f5565b508080600101915050610c52565b5050505050565b6040518061014001604052806060815260200160608152602001600081526020016060815260200160006fffffffffffffffffffffffffffffffff19168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160001515815260200160008152602001606081525090565b5080546000825590600052602060002090810190610d6d9190610d70565b50565b5b80821115610d905760008181610d879190610d94565b50600101610d71565b5090565b508054610da09061157f565b6000825580601f10610db25750610dd1565b601f016020900490600052602060002090810190610dd09190610dd4565b5b50565b5b80821115610ded576000816000905550600101610dd5565b5090565b600080fd5b600080fd5b600080fd5b60006101208284031215610e1757610e16610dfb565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e4557610e44610e20565b5b8235905067ffffffffffffffff811115610e6257610e61610e25565b5b602083019150836020820283011115610e7e57610e7d610e2a565b5b9250929050565b600080600060408486031215610e9e57610e9d610df1565b5b600084013567ffffffffffffffff811115610ebc57610ebb610df6565b5b610ec886828701610e00565b935050602084013567ffffffffffffffff811115610ee957610ee8610df6565b5b610ef586828701610e2f565b92509250509250925092565b60008083601f840112610f1757610f16610e20565b5b8235905067ffffffffffffffff811115610f3457610f33610e25565b5b602083019150836001820283011115610f5057610f4f610e2a565b5b9250929050565b60008060208385031215610f6e57610f6d610df1565b5b600083013567ffffffffffffffff811115610f8c57610f8b610df6565b5b610f9885828601610f01565b92509250509250929050565b6000819050919050565b610fb781610fa4565b82525050565b6000602082019050610fd26000830184610fae565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61100d81610fa4565b82525050565b600061101f8383611004565b60208301905092915050565b6000602082019050919050565b600061104382610fd8565b61104d8185610fe3565b935061105883610ff4565b8060005b838110156110895781516110708882611013565b975061107b8361102b565b92505060018101905061105c565b5085935050505092915050565b600060208201905081810360008301526110b08184611038565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110f25780820151818401526020810190506110d7565b60008484015250505050565b6000601f19601f8301169050919050565b600061111a826110b8565b61112481856110c3565b93506111348185602086016110d4565b61113d816110fe565b840191505092915050565b6000819050919050565b61115b81611148565b82525050565b600081519050919050565b600082825260208201905092915050565b600061118882611161565b611192818561116c565b93506111a28185602086016110d4565b6111ab816110fe565b840191505092915050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6111eb816111b6565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061121c826111f1565b9050919050565b61122c81611211565b82525050565b60008115159050919050565b61124781611232565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611285838361117d565b905092915050565b6000602082019050919050565b60006112a58261124d565b6112af8185611258565b9350836020820285016112c185611269565b8060005b858110156112fd57848403895281516112de8582611279565b94506112e98361128d565b925060208a019950506001810190506112c5565b50829750879550505050505092915050565b600061014083016000830151848203600086015261132d828261110f565b91505060208301518482036020860152611347828261110f565b915050604083015161135c6040860182611152565b5060608301518482036060860152611374828261117d565b915050608083015161138960808601826111e2565b5060a083015161139c60a0860182611223565b5060c083015184820360c08601526113b4828261117d565b91505060e08301516113c960e086018261123e565b506101008301516113de610100860182611152565b506101208301518482036101208601526113f8828261129a565b9150508091505092915050565b6000602082019050818103600083015261141f818461130f565b905092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261145357611452611427565b5b80840192508235915067ffffffffffffffff8211156114755761147461142c565b5b60208301925060018202360383131561149157611490611431565b5b509250929050565b600082825260208201905092915050565b7f506173736b6579206e6f74207265676973746572656400000000000000000000600082015250565b60006114e0601683611499565b91506114eb826114aa565b602082019050919050565b6000602082019050818103600083015261150f816114d3565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061159757607f821691505b6020821081036115aa576115a9611550565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826115d5565b61161c86836115d5565b95508019841693508086168417925050509392505050565b6000819050919050565b600061165961165461164f84611148565b611634565b611148565b9050919050565b6000819050919050565b6116738361163e565b61168761167f82611660565b8484546115e2565b825550505050565b600090565b61169c61168f565b6116a781848461166a565b505050565b5b818110156116cb576116c0600082611694565b6001810190506116ad565b5050565b601f821115611710576116e1816115b0565b6116ea846115c5565b810160208510156116f9578190505b61170d611705856115c5565b8301826116ac565b50505b505050565b600082821c905092915050565b600061173360001984600802611715565b1980831691505092915050565b600061174c8383611722565b9150826002028217905092915050565b6117668383611516565b67ffffffffffffffff81111561177f5761177e611521565b5b611789825461157f565b6117948282856116cf565b6000601f8311600181146117c357600084156117b1578287013590505b6117bb8582611740565b865550611823565b601f1984166117d1866115b0565b60005b828110156117f9578489013582556001820191506020850194506020810190506117d4565b868310156118165784890135611812601f891682611722565b8355505b6001600288020188555050505b50505050505050565b6000808335600160200384360303811261184957611848611427565b5b80840192508235915067ffffffffffffffff82111561186b5761186a61142c565b5b60208301925060018202360383131561188757611886611431565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b601f8211156118f0576118c18161189a565b6118ca846115c5565b810160208510156118d9578190505b6118ed6118e5856115c5565b8301826116ac565b50505b505050565b6118ff838361188f565b67ffffffffffffffff81111561191857611917611521565b5b611922825461157f565b61192d8282856118af565b6000601f83116001811461195c576000841561194a578287013590505b6119548582611740565b8655506119bc565b601f19841661196a8661189a565b60005b828110156119925784890135825560018201915060208501945060208101905061196d565b868310156119af57848901356119ab601f891682611722565b8355505b6001600288020188555050505b50505050505050565b6119ce816111b6565b81146119d957600080fd5b50565b6000813590506119eb816119c5565b92915050565b600060208284031215611a0757611a06610df1565b5b6000611a15848285016119dc565b91505092915050565b611a2781611211565b8114611a3257600080fd5b50565b600081359050611a4481611a1e565b92915050565b600060208284031215611a6057611a5f610df1565b5b6000611a6e84828501611a35565b91505092915050565b611a8081611232565b8114611a8b57600080fd5b50565b600081359050611a9d81611a77565b92915050565b600060208284031215611ab957611ab8610df1565b5b6000611ac784828501611a8e565b91505092915050565b7f506173736b657920616c72656164792072656769737465726564000000000000600082015250565b6000611b06601a83611499565b9150611b1182611ad0565b602082019050919050565b60006020820190508181036000830152611b3581611af9565b9050919050565b7f506173736b6579206e6f7420666f756e64000000000000000000000000000000600082015250565b6000611b72601183611499565b9150611b7d82611b3c565b602082019050919050565b60006020820190508181036000830152611ba181611b65565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212208ecf7d64f9274f73398cd82a044c2648265173169b4a52abcadec9d594331ac264736f6c634300081c0033";

type PasskeyStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PasskeyStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PasskeyStorage__factory extends ContractFactory {
  constructor(...args: PasskeyStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PasskeyStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PasskeyStorage__factory {
    return super.connect(runner) as PasskeyStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PasskeyStorageInterface {
    return new Interface(_abi) as PasskeyStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PasskeyStorage {
    return new Contract(address, _abi, runner) as unknown as PasskeyStorage;
  }
}
